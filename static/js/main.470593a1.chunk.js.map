{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","types/Sort.ts","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","App.tsx","services/filterTodos.tsx","index.tsx"],"names":["Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Sort","TodoModal","selectedTodo","setSelectedTodo","useState","user","setUser","useEffect","userId","id","type","onClick","title","completed","href","email","name","TodoFilter","query","setQuery","filter","setFilter","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","TodoList","todos","map","todo","App","setTodos","visibleTodos","useMemo","sortType","newTodo","trim","toLowerCase","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.470593a1.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Sort {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Sort } from '../../types/Sort';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  filter: Sort;\n  setFilter: (filter: Sort) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filter,\n  setFilter,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Sort);\n  };\n\n  const handleQuaryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDelete = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            <option value={Sort.All}>All</option>\n            <option value={Sort.Active}>Active</option>\n            <option value={Sort.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuaryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={\n            todo.id === selectedTodo?.id\n              ? ('has-background-info-light'\n              ) : (\n                ''\n              )\n          }\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={\n              todo.completed ? (\n                'has-text-success'\n              ) : (\n                'has-text-danger'\n              )\n            }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={\n                  todo.id === selectedTodo?.id ? (\n                    'far fa-eye-slash'\n                  ) : (\n                    'far fa-eye'\n                  )\n                }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Sort } from './types/Sort';\nimport { getTodos } from './api';\nimport { filterTodos } from './services/filterTodos';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Sort.All);\n\n  const visibleTodos = useMemo(() => {\n    return filterTodos(todos, filter, query);\n  }, [todos, query, filter]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Sort } from '../types/Sort';\nimport { Todo } from '../types/Todo';\n\nexport function filterTodos(todos: Todo[], sortType: Sort, query: string) {\n  let newTodo = [...todos];\n\n  if (query.trim()) {\n    newTodo = newTodo.filter(todo => todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase()));\n  }\n\n  switch (sortType) {\n    case Sort.Active:\n      return newTodo.filter(todo => !todo.completed);\n    case Sort.Completed:\n      return newTodo.filter(todo => todo.completed);\n    default:\n      return newTodo;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}